/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 12 21:32:07 GMT 2018
 */


import org.junit.Assert;
import org.junit.Test;

import static java.util.Calendar.MAY;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.*;
import java.time.Month;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Client_ESTest extends Client_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("", ",.K9P79IO/$>_#7Nc?3K", "G_:eD5lcoO", "G_:eD5lcoO", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      point2D_Double0.x = 663.5;
      Point2D.Double point2D_Double1 = client0.getPosition();
      Trip trip0 = new Trip((1736), point2D_Double0, point2D_Double1, (Double) 1911.8, (Double) 0.0, localDate0, ",", "", "", (-102), 1688.2, point2D_Double0, 0, (-2408.8735055), 0.0);
      client0.addTrip(trip0);
      assertEquals(663.5, client0.getTotalDistance(), 0.01);
      assertEquals(point2D_Double1.getX(),client0.getPosition().getX(),0.0001);
      assertEquals(point2D_Double1.getY(),client0.getPosition().getY(),0.0001);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("(`#txXg6ycCb',XTmM", "(`#txXg6ycCb',XTmM", "4PPgx8'k7.l05/bX", "[mGMcbZ\"", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Double double0 = new Double((-1.0));
      Trip trip0 = new Trip(1351, point2D_Double0, point2D_Double0, (Double) 0.0, double0, localDate0, "_O", "_O", "**", 1, 1, point2D_Double0, 3600.0, 1481.66, 0.0);
      client0.addTrip(trip0);
      assertFalse(client0.isPremium());
      assertEquals(0, client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Client client0 = new Client("", "", "", "", localDate0);
      assertFalse(client0.isPremium());
      
      client0.setPremium(true);
      boolean boolean0 = client0.isPremium();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Client client0 = new Client((String) null, (String) null, (String) null, "", localDate0);
      client0.setQueue("\nTrip id : ");
      client0.getQueue();
      assertEquals(0, client0.getPoints());
      assertFalse(client0.isPremium());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Client client0 = new Client("}os][|F8[rK-7", "", "", "", localDate0);
      client0.setQueue("");
      client0.getQueue();
      assertFalse(client0.isPremium());
      assertEquals(0, client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Client client0 = new Client("", "", "", "", localDate0);
      client0.setPoints(3113);
      int int0 = client0.getPoints();
      assertEquals(3113, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("\nPremium : ", "\nPremium : ", "", "$S/P8aqs^$[", localDate0);
      client0.setPoints((-16));
      int int0 = client0.getPoints();
      assertEquals((-16), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double(2608.0, 2608.0);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client("", "", "Client", "Client", localDate0, point2D_Double0, (-1548.26358643), arrayList0, (-1105), 2608.0, false, "Client");
      Client client1 = client0.clone();
      assertFalse(client1.isPremium());
      assertEquals((-1105), client0.getPoints());
      assertEquals((-1105), client1.getPoints());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Client client0 = new Client("\nTrip id : ", "yZ?w1=up'>.^lWE", "oE_tbi+;<bY3jts$j u", "oE_tbi+;<bY3jts$j u", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip((-1407), point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, "t[#?'?$jbD/x?T$ ", "t[#?'?$jbD/x?T$ ", "", 0, (-4431.061), point2D_Double0, 0.0, 0.0, 0.0);
      client0.addTrip(trip0);
      Client client1 = client0.clone();
      assertFalse(client1.isPremium());
      assertEquals(0, client1.getPoints());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Period period0 = Period.ofWeeks(0);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client("-U2X0z9k%4-ttA)bte", "-U2X0z9k%4-ttA)bte", "-U2X0z9k%4-ttA)bte", "-U2X0z9k%4-ttA)bte", localDate0, point2D_Double0, 0.0, arrayList0, 2253, (-2373.278), false, "-U2X0z9k%4-ttA)bte");
      Client client1 = client0.clone();
      assertEquals(2253, client1.getPoints());
      assertFalse(client1.isPremium());
      assertEquals(2253, client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("'mx(M`'JB", "", "'mx(M`'JB", ",", localDate0);
      // Undeclared exception!
      try { 
        client0.setPosition((Point2D.Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("b3tzpG%Gw2G-", "", "b3tzpG%Gw2G-", "", localDate0);
      Trip trip0 = new Trip();
      client0.addTrip(trip0);
      // Undeclared exception!
      try { 
        client0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("\nN\u00FAmero de viagens :", "\nN\u00FAmero de viagens :", "\nN\u00FAmero de viagens :", "", localDate0);
      // Undeclared exception!
      try { 
        client0.addTrip((Trip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("User", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client("P>3", "}uY1x", "O<8d6n.", "O<8d6n.", (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("User", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client((Client) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Client client0 = new Client((String) null, (String) null, (String) null, "", localDate0);
      client0.getQueue();
      assertEquals(0, client0.getPoints());
      assertFalse(client0.isPremium());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double(0, 0);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client("&S3bTyszo8R'zsja'zz", "&S3bTyszo8R'zsja'zz", "&S3bTyszo8R'zsja'zz", "a", localDate0, point2D_Double0, 1.0, arrayList0, (-2749), 1361.786948123, true, "a");
      Client client1 = client0.clone();
      assertEquals((-2749), client1.getPoints());
      assertEquals((-2749), client0.getPoints());
      assertTrue(client1.isPremium());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Client client0 = new Client("}os][|F8[rK-7", "", "", "", localDate0);
      boolean boolean0 = client0.isPremium();
      assertFalse(boolean0);
      assertEquals(0, client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Client client0 = new Client("}os][|F8[rK-7", "", "", "", localDate0);
      Client client1 = new Client(client0);
      assertEquals(0, client1.getPoints());
      assertFalse(client1.isPremium());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("b3tzpG%Gw2G-", "", "b3tzpG%Gw2G-", "", localDate0);
      int int0 = client0.getPoints();
      assertEquals(0, int0);
      assertFalse(client0.isPremium());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("", ",.K9P79IO/$>_#7Nc?3K", "G_:eD5lcoO", "G_:eD5lcoO", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      client0.setPosition(point2D_Double0);
      assertFalse(client0.isPremium());
      assertEquals(0, client0.getPoints());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("b3tzpG%Gw2G-", "", "b3tzpG%Gw2G-", "", localDate0);
      String string0 = client0.toString();
      assertEquals("Utilizador - \neMail : b3tzpG%Gw2G-\nPassword : b3tzpG%Gw2G-\nMorada : \nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nPosi\u00E7\u00E3o : (0.0,0.0)\nPontos : 0\nPremium : false\nFila de espera : null", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client();
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): 0
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = null;
      try {
        client0 = new Client("Driver \n", "TO/#w(x%[_'pm-mI8u", "TO/#w(x%[_'pm-mI8u", "TO/#w(x%[_'pm-mI8u", (LocalDate) null, (Point2D.Double) null, (-2218), arrayList0, (-1), (-1), true, "TO/#w(x%[_'pm-mI8u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("User", e);
      }
  }

    @Test
    public void addViagem() {
      Client c = new Client("b3tzpG%Gw2G-", "", "b3tzpG%Gw2G-", "",LocalDate.of(1990,11,12));
      LocalDate d1 = LocalDate.of(2018,11,12);
      Trip trip0 = new Trip(500, new Point2D.Double(), new Point2D.Double(5,0), 5.0, 10.0, d1, "","", "", 5, 5.0, new Point2D.Double(), 8.0, 10.0, 7.0);
      Point2D.Double point2D_Double1 = new Point2D.Double();
      c.addTrip(trip0);
      assertEquals(1,c.getNumberOfTrips(),0.001);
      assertEquals(new Point2D.Double(5,0),c.getPosition());
      assertEquals(5,c.getTotalDistance(),0.0001);
      assertEquals(10/ 2 + 5 / 4,c.getPoints(),0.0001);
      assertEquals(1,c.getTrips().size(),0.0001);
      assertEquals(true,c.getTrips().contains(trip0));
  }
}
