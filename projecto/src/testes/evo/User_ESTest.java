/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 12 21:11:52 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("\n?empo real at\u00E9 ao cliente : ", "\n?empo real at\u00E9 ao cliente : ", "Ok(_kXtDc3|yCnM", "\n?empo real at\u00E9 ao cliente : ", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double((-1), (-66));
      Point2D.Double point2D_Double1 = new Point2D.Double();
      Trip trip0 = new Trip((-66), point2D_Double0, point2D_Double1, (Double) point2D_Double1.y, (Double) point2D_Double1.y, localDate0, "E'f", "lcXIc8sgwi", "E'f", (-1), 0.0, point2D_Double1, 449.0, 1.0, (-1));
      client0.addTrip(trip0);
      assertEquals(66.007575322837, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("\n?empo real at\u00E9 ao cliente : ", "\n?empo real at\u00E9 ao cliente : ", "Ok(_kXtDc3|yCnM", "\n?empo real at\u00E9 ao cliente : ", localDate0);
      Point2D.Double point2D_Double0 = new Point2D.Double((-1), (-66));
      Trip trip0 = new Trip((-66), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "E'f", "lcXIc8sgwi", "E'f", (-1), 0.0, point2D_Double0, 449.0, 1.0, (-1));
      client0.addTrip(trip0);
      assertEquals((-66.0), client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", localDate0, (-530.0), "&5/Gw~=re{98^vs*B");
      driver0.setBirthday(localDate0);
      assertEquals(0, driver0.getNumberOfReviews());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", localDate0, (-524.133472369556), "&5/Gwre{8^vs*B");
      String string0 = driver0.toString();
      assertEquals("Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Period period0 = Period.ofMonths((-1463));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.valueOf("\nPre\u00E7o : ");
      Driver driver0 = new Driver("", "\nMorada : ", "", "", localDate0, 1.0, (-1463), boolean0, (-1463), (ArrayList<Trip>) null, (-1766), 2.0, 2.0, "", "@s3e'/]XL9:$WcR", (-1766));
      double double0 = driver0.getTotalDistance();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Period period0 = Period.ofMonths((-1463));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.valueOf("\nPre\u00E7o : ");
      Driver driver0 = new Driver("", "\nMorada : ", "", "", localDate0, (-1463), (-1463), boolean0, (-1463), (ArrayList<Trip>) null, (-1766), 2.0, 2.0, "", "@s3e'/]XL9:$WcR", (-1766));
      double double0 = driver0.getTotalDistance();
      assertEquals((-1463.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("tX@vaPlQf", (String) null, "\nTempo real at\u00E9 ao cliente : ", "tX@vaPlQf", localDate0, 2579.923, "");
      driver0.setPassword((String) null);
      String string0 = driver0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Period period0 = Period.ofMonths((-1463));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.valueOf("\nPre\u00E7o : ");
      Driver driver0 = new Driver("", "\nMorada : ", "", "", localDate0, 1.0, (-1463), boolean0, (-1463), (ArrayList<Trip>) null, (-1766), 2.0, 2.0, "", "@s3e'/]XL9:$WcR", (-1766));
      String string0 = driver0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", localDate0, (-530.0), "&5/Gw~=re{98^vs*B");
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0, 4.0);
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Client client0 = new Client("KL", (String) null, "Driver \nUtilizador - &5/Gw~=re{98^vs*B\neMail : &5/Gw~=re{98^vs*B\nPassword : &5/Gw~=re{98^vs*B\nMorada : &5/Gw~=re{98^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -530.0\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", (String) null, localDate0, point2D_Double0, 0.0, arrayList0, 1003, 0.0, false, "");
      Trip trip0 = new Trip(101, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.x, localDate0, "(jo`YI4:=p", "Rw,qt", "(jo`YI4:=p", 0, 1.0, point2D_Double0, (-3263.6538127596073), 793.2781417564918, 3103.5350443182);
      client0.addTrip(trip0);
      client0.getNumberOfTrips();
      assertEquals(1.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      Client client0 = new Client((String) null, (String) null, "23FkJe^S!E", "23FkJe^S!E", localDate0);
      String string0 = client0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Driver driver0 = new Driver("v:", "", "v:", "v:", localDate0, 0, "m:");
      String string0 = driver0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Period period0 = Period.ofYears(2);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Point2D.Double point2D_Double0 = new Point2D.Double(1420.17, 2);
      Client client0 = new Client("", (String) null, "", (String) null, localDate0, point2D_Double0, 832.877959838, (ArrayList<Trip>) null, (-1374), 2, true, "");
      double double0 = client0.getMoney();
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Driver driver0 = new Driver("v:", "", "v:", "v:", localDate0, 0, "m:");
      Boolean boolean0 = driver0.isAvailable();
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Driver driver1 = new Driver("A-z(-.lZyBptbf<3Ii", "4Q5-WycC&dQ*[7Ttb", "m:", "m:", localDate0, 0, 0, boolean0, 1.0, arrayList0, (-469), (-1570.8698599789864), 0.47018231377069547, "", "ycCLL>", 0.0);
      double double0 = driver1.getMoney();
      assertEquals((-1570.8698599789864), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Month month0 = Month.JANUARY;
      LocalDate localDate0 = MockLocalDate.of(1, month0, 1);
      Boolean boolean0 = new Boolean(false);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver((String) null, "}|^O^#%Q%heM", "Driver", "\nDist\u00E2ncia Total : ", localDate0, 1, (-1.0), boolean0, 1, arrayList0, 1, (-1519.07), 0.0, "Utilizador - ", "}|^O^#%Q%heM", 3600.0);
      String string0 = driver0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Client client0 = new Client("`XLxi/ubF#T^", "7(", "`XLxi/ubF#T^", "`XLxi/ubF#T^", localDate0);
      String string0 = client0.getEmail();
      assertEquals("`XLxi/ubF#T^", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Trip trip0 = new Trip();
      LocalDate localDate0 = trip0.getDate();
      Client client0 = new Client("l#V+2r(%$fI<z/oyg", "l#V+2r(%$fI<z/oyg", "", (String) null, localDate0);
      String string0 = client0.getAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Period period0 = Period.ofMonths((-1463));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.valueOf("\nPre\u00E7o : ");
      Driver driver0 = new Driver("", "\nMorada : ", "", "", localDate0, 1.0, (-1463), boolean0, (-1463), (ArrayList<Trip>) null, (-1766), 2.0, 2.0, "", "@s3e'/]XL9:$WcR", (-1766));
      String string0 = driver0.getAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Driver driver0 = new Driver(":3GXyQ=nruaw6]B", ":3GXyQ=nruaw6]B", ":3GXyQ=nruaw6]B", ":3GXyQ=nruaw6]B", localDate0, 0.0, "");
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver1 = new Driver("\nData de nascimento : ", "C?YP~ui]oD{qk=", ":3GXyQ=nruaw6]B", "\nData de nascimento : ", localDate0, 0.0, 0.0, boolean0, 0.0, arrayList0, 5395, 0.0, 5395, "", "xY\"0<:%H I$^G0/%-.", (-1970.016));
      boolean boolean1 = driver0.equals((User) driver1);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Period period0 = Period.ofYears(2862);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Client client0 = new Client("`B/XRc", "`B/XRc", "`B/XRc", ",", localDate0);
      client0.clone();
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals(0.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", localDate0, (-524.133472369556), "&5/Gwre{8^vs*B");
      Point2D.Double point2D_Double0 = new Point2D.Double((-524.133472369556), (-524.133472369556));
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Client client0 = new Client("Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", "Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", "Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", (String) null, localDate0, point2D_Double0, (-524.133472369556), arrayList0, 1003, 0.0, false, "");
      Double double0 = new Double(1003);
      Trip trip0 = new Trip(110, point2D_Double0, point2D_Double0, double0, double0, localDate0, "(jo`YI4:=p", "(jo`YI4:=p", "(jo`YI4:=p", 110, (-524.133472369556), point2D_Double0, (-3263.6538127596073), 793.2781417564918, (-524.133472369556));
      client0.addTrip(trip0);
      client0.clone();
      assertEquals(1003.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(748L);
      Boolean boolean0 = new Boolean("\nMorada : ");
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("~Kk: \"v/-TxV", "", "YbN2 y{n=c &\"U%`EVO", "~Kk: \"v/-TxV", localDate0, 941.028014587036, 792.10499174, boolean0, 792.10499174, arrayList0, 0, 748L, 3740.8, "YbN2 y{n=c &\"U%`EVO", "~Kk: \"v/-TxV", 4923.89039961);
      driver0.setMoney((-2245.820642432));
      driver0.clone();
      assertEquals((-2245.820642432), driver0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockLocalDate.now(zoneId0);
      Trip trip0 = new Trip();
      Point2D.Double point2D_Double0 = trip0.getEnd();
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      arrayList0.add(trip0);
      Client client0 = new Client("", "", "", "k\"+lN`HB[w`$", localDate0, point2D_Double0, 825.15, arrayList0, 1751, (-1.0), true, "");
      // Undeclared exception!
      try { 
        client0.getTrips();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("tX@vaPlQf", (String) null, "\nTempo real at\u00E9 ao cliente : ", "tX@vaPlQf", localDate0, 2579.923, "");
      // Undeclared exception!
      try { 
        driver0.equals((User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("User", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(8, 8);
      Boolean boolean0 = new Boolean("(N-");
      Driver driver0 = new Driver("+|4W*Ps`Cb/1o_d", "7vWly%?<J=I_RF_v", "7vWly%?<J=I_RF_v", "\nMatr\u00EDcula ve\u00EDculo : ", localDate0, 2666.3522, 2666.3522, boolean0, 2666.3522, (ArrayList<Trip>) null, 8, 8, 8, "**", "(N-", (-2659.68511934403));
      Trip trip0 = new Trip();
      // Undeclared exception!
      try { 
        driver0.addTrip(trip0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", localDate0, (-530.0), "&5/Gw~=re{98^vs*B");
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 4.0);
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Client client0 = new Client("KL", (String) null, "Driver \nUtilizador - &5/Gw~=re{98^vs*B\neMail : &5/Gw~=re{98^vs*B\nPassword : &5/Gw~=re{98^vs*B\nMorada : &5/Gw~=re{98^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -530.0\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", (String) null, localDate0, point2D_Double0, 0.0, arrayList0, 1003, 0.0, false, "");
      Trip trip0 = new Trip(101, point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) point2D_Double0.x, localDate0, "(jo`YI4:=p", "Rw,qt", "(jo`YI4:=p", 0, 0.0, point2D_Double0, (-3263.6538127596073), 793.2781417564918, 3103.5350443182);
      client0.addTrip(trip0);
      ArrayList<Trip> arrayList1 = client0.getTrips();
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
      assertEquals(1, arrayList1.size());
      assertEquals(0.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(2, 5);
      Client client0 = new Client("\nDesvio total : ", "K^d,}8pI'sUm-+", "", "\nDesvio total : ", localDate0);
      String string0 = client0.getAddress();
      assertEquals("\nDesvio total : ", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-346L));
      Driver driver0 = new Driver("", "", "", "!W]gL_~8vs~6YC*", localDate0, (-346L), "");
      double double0 = driver0.getTotalDistance();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("n", "n", "", "%OB", localDate0);
      LocalDate localDate1 = client0.getBirthday();
      assertTrue(localDate1.equals((Object)localDate0));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("tX@vaPlQf", (String) null, "\nTempo real at\u00E9 ao cliente : ", "tX@vaPlQf", localDate0, 2579.923, "");
      String string0 = driver0.getPassword();
      assertEquals("\nTempo real at\u00E9 ao cliente : ", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-346L));
      Driver driver0 = new Driver("", "", "", "!W]gL_~8vs~6YC*", localDate0, (-346L), "");
      double double0 = driver0.getMoney();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-346L));
      Driver driver0 = new Driver("", "", "", "!W]gL_~8vs~6YC*", localDate0, (-346L), "");
      String string0 = driver0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(748L);
      Client client0 = new Client("Ej$H", "Ej$H", "~Kk: \"v/-TxV", "~Kk: \"v/-TxV", localDate0);
      String string0 = client0.getName();
      assertEquals("Ej$H", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", localDate0, (-524.133472369556), "&5/Gwre{8^vs*B");
      Point2D.Double point2D_Double0 = new Point2D.Double((-524.133472369556), (-524.133472369556));
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Client client0 = new Client("Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", "Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", "Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", (String) null, localDate0, point2D_Double0, (-524.133472369556), arrayList0, 1003, 0.0, false, "");
      Trip trip0 = new Trip();
      client0.addTrip(trip0);
      client0.addTrip(trip0);
      ArrayList<String> arrayList1 = client0.getDates();
      assertEquals(0.0, client0.getMoney(), 0.01);
      assertEquals(1, arrayList1.size());
      assertEquals((-524.133472369556), client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", localDate0, (-524.133472369556), "&5/Gwre{8^vs*B");
      Point2D.Double point2D_Double0 = new Point2D.Double((-524.133472369556), (-524.133472369556));
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Client client0 = new Client("Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", "Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", "Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", (String) null, localDate0, point2D_Double0, (-524.133472369556), arrayList0, 1003, 0.0, false, "");
      ArrayList<String> arrayList1 = client0.getDates();
      assertFalse(arrayList1.contains("Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n"));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client();
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): 0
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", "&5/Gw~=re{98^vs*B", localDate0, (-529.7890264133898), "&5/Gw~=re{98^vs*B");
      // Undeclared exception!
      try { 
        driver0.setBirthday((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("User", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", localDate0, (-524.133472369556), "&5/Gwre{8^vs*B");
      driver0.setAddress("&5/Gwre{8^vs*B");
      assertEquals(0, driver0.getExp());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.of(5, 5, 5);
      Driver driver0 = new Driver("<M:Wy,szVae?:0(xC-", "<M:Wy,szVae?:0(xC-", "<M:Wy,szVae?:0(xC-", "<M:Wy,szVae?:0(xC-", localDate0, 5, "<M:Wy,szVae?:0(xC-");
      int int0 = driver0.getNumberOfTrips();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.of(5, 5, 5);
      Driver driver0 = new Driver("<M:Wy,szVae?:0(xC-", "<M:Wy,szVae?:0(xC-", "<M:Wy,szVae?:0(xC-", "<M:Wy,szVae?:0(xC-", localDate0, 5, "<M:Wy,szVae?:0(xC-");
      driver0.setName("<M:Wy,szVae?:0(xC-");
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("t{PJM", "t{PJM", "t{PJM", "t{PJM", localDate0, 39.28029421889351, "t{PJM");
      boolean boolean0 = driver0.equals((User) driver0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.of(5, 5, 5);
      Driver driver0 = new Driver("<M:Wy,szVae?:0(xC-", "<M:Wy,szVae?:0(xC-", "<M:Wy,szVae?:0(xC-", "<M:Wy,szVae?:0(xC-", localDate0, 5, "<M:Wy,szVae?:0(xC-");
      driver0.setEmail("<M:Wy,szVae?:0(xC-");
      assertNull(driver0.getVehicle());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", "&5/Gwre{8^vs*B", localDate0, (-524.133472369556), "&5/Gwre{8^vs*B");
      Point2D.Double point2D_Double0 = new Point2D.Double((-524.133472369556), (-524.133472369556));
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Client client0 = new Client("Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", "Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", "Driver \nUtilizador - &5/Gwre{8^vs*B\neMail : &5/Gwre{8^vs*B\nPassword : &5/Gwre{8^vs*B\nMorada : &5/Gwre{8^vs*B\nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : -524.133472369556\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", (String) null, localDate0, point2D_Double0, (-524.133472369556), arrayList0, 1003, 0.0, false, "");
      Trip trip0 = new Trip();
      client0.addTrip(trip0);
      // Undeclared exception!
      try { 
        client0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(14, 14);
      Integer integer0 = new Integer(14);
      Driver driver0 = new Driver("Q~' g+dp", "Q~' g+dp", "Q~' g+dp", "Q~' g+dp", localDate0, 14, "Q~' g+dp");
      driver0.setTotalDistance((double) integer0);
      assertEquals(14.0, driver0.getTotalDistance(), 0.01);
  }
}
