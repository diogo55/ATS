/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 12 21:30:54 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.antlr.v4.runtime.ParserRuleContext;
import org.antlr.v4.runtime.tree.ErrorNode;
import org.antlr.v4.runtime.tree.TerminalNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ATSBaseListener_ESTest extends ATSBaseListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ATSBaseListener aTSBaseListener0 = new ATSBaseListener();
      ATSParser.FuncaoContext aTSParser_FuncaoContext0 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFuncao(aTSParser_FuncaoContext0);
      aTSBaseListener0.visitTerminal((TerminalNode) null);
      ATSParser.FuncaoContext aTSParser_FuncaoContext1 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitFuncao(aTSParser_FuncaoContext1);
      ATSParser.FuncaoContext aTSParser_FuncaoContext2 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFuncao(aTSParser_FuncaoContext2);
      ParserRuleContext parserRuleContext0 = mock(ParserRuleContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitEveryRule(parserRuleContext0);
      ErrorNode errorNode0 = mock(ErrorNode.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.visitErrorNode(errorNode0);
      ATSParser.FimContext aTSParser_FimContext0 = mock(ATSParser.FimContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitFim(aTSParser_FimContext0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ATSBaseListener aTSBaseListener0 = new ATSBaseListener();
      ATSParser.RegClienteContext aTSParser_RegClienteContext0 = mock(ATSParser.RegClienteContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterRegCliente(aTSParser_RegClienteContext0);
      ATSParser.RegCondContext aTSParser_RegCondContext0 = mock(ATSParser.RegCondContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterRegCond(aTSParser_RegCondContext0);
      ATSParser.LogContext aTSParser_LogContext0 = mock(ATSParser.LogContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterLog(aTSParser_LogContext0);
      ATSParser.ViajarContext aTSParser_ViajarContext0 = mock(ATSParser.ViajarContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterViajar(aTSParser_ViajarContext0);
      ATSParser.RegClienteContext aTSParser_RegClienteContext1 = mock(ATSParser.RegClienteContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterRegCliente(aTSParser_RegClienteContext1);
      ErrorNode errorNode0 = mock(ErrorNode.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.visitErrorNode(errorNode0);
      ATSParser.SolicitarContext aTSParser_SolicitarContext0 = mock(ATSParser.SolicitarContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterSolicitar(aTSParser_SolicitarContext0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ATSBaseListener aTSBaseListener0 = new ATSBaseListener();
      aTSBaseListener0.enterViajar((ATSParser.ViajarContext) null);
      ATSParser.RegCondContext aTSParser_RegCondContext0 = mock(ATSParser.RegCondContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitRegCond(aTSParser_RegCondContext0);
      ATSParser.RegCondContext aTSParser_RegCondContext1 = mock(ATSParser.RegCondContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitRegCond(aTSParser_RegCondContext1);
      aTSBaseListener0.exitRegEmpresa((ATSParser.RegEmpresaContext) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ATSBaseListener aTSBaseListener0 = new ATSBaseListener();
      ATSParser.RegClienteContext aTSParser_RegClienteContext0 = mock(ATSParser.RegClienteContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitRegCliente(aTSParser_RegClienteContext0);
      ATSParser.LoginContext aTSParser_LoginContext0 = mock(ATSParser.LoginContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterLogin(aTSParser_LoginContext0);
      ATSParser.FuncaoContext aTSParser_FuncaoContext0 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFuncao(aTSParser_FuncaoContext0);
      aTSBaseListener0.exitSolicitar((ATSParser.SolicitarContext) null);
      ATSParser.RegCondContext aTSParser_RegCondContext0 = mock(ATSParser.RegCondContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterRegCond(aTSParser_RegCondContext0);
      aTSBaseListener0.enterRegCliente((ATSParser.RegClienteContext) null);
      ATSParser.LoginContext aTSParser_LoginContext1 = mock(ATSParser.LoginContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterLogin(aTSParser_LoginContext1);
      ATSParser.FuncaoContext aTSParser_FuncaoContext1 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFuncao(aTSParser_FuncaoContext1);
      aTSBaseListener0.enterSolicitar((ATSParser.SolicitarContext) null);
      TerminalNode terminalNode0 = mock(TerminalNode.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.visitTerminal(terminalNode0);
      ATSParser.LogoutContext aTSParser_LogoutContext0 = mock(ATSParser.LogoutContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterLogout(aTSParser_LogoutContext0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ATSBaseListener aTSBaseListener0 = new ATSBaseListener();
      ATSParser.ViajarContext aTSParser_ViajarContext0 = mock(ATSParser.ViajarContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterViajar(aTSParser_ViajarContext0);
      ATSParser.SolicitarContext aTSParser_SolicitarContext0 = mock(ATSParser.SolicitarContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitSolicitar(aTSParser_SolicitarContext0);
      ParserRuleContext parserRuleContext0 = mock(ParserRuleContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitEveryRule(parserRuleContext0);
      TerminalNode terminalNode0 = mock(TerminalNode.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.visitTerminal(terminalNode0);
      ATSParser.LogoutContext aTSParser_LogoutContext0 = mock(ATSParser.LogoutContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterLogout(aTSParser_LogoutContext0);
      ATSParser.AutenticadoContext aTSParser_AutenticadoContext0 = mock(ATSParser.AutenticadoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterAutenticado(aTSParser_AutenticadoContext0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ATSBaseListener aTSBaseListener0 = new ATSBaseListener();
      ATSParser.RegClienteContext aTSParser_RegClienteContext0 = mock(ATSParser.RegClienteContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitRegCliente(aTSParser_RegClienteContext0);
      ATSParser.FuncaoContext aTSParser_FuncaoContext0 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitFuncao(aTSParser_FuncaoContext0);
      ATSParser.FuncaoContext aTSParser_FuncaoContext1 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitFuncao(aTSParser_FuncaoContext1);
      ATSParser.RegClienteContext aTSParser_RegClienteContext1 = mock(ATSParser.RegClienteContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterRegCliente(aTSParser_RegClienteContext1);
      ParserRuleContext parserRuleContext0 = mock(ParserRuleContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitEveryRule(parserRuleContext0);
      ATSParser.FimContext aTSParser_FimContext0 = mock(ATSParser.FimContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFim(aTSParser_FimContext0);
      ATSParser.LogoutContext aTSParser_LogoutContext0 = mock(ATSParser.LogoutContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterLogout(aTSParser_LogoutContext0);
      ATSParser.LoginContext aTSParser_LoginContext0 = mock(ATSParser.LoginContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterLogin(aTSParser_LoginContext0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ATSBaseListener aTSBaseListener0 = new ATSBaseListener();
      ATSParser.LogContext aTSParser_LogContext0 = mock(ATSParser.LogContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitLog(aTSParser_LogContext0);
      ATSParser.LogoutContext aTSParser_LogoutContext0 = mock(ATSParser.LogoutContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitLogout(aTSParser_LogoutContext0);
      ATSParser.RegEmpresaContext aTSParser_RegEmpresaContext0 = mock(ATSParser.RegEmpresaContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterRegEmpresa(aTSParser_RegEmpresaContext0);
      ATSParser.RegCondContext aTSParser_RegCondContext0 = mock(ATSParser.RegCondContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterRegCond(aTSParser_RegCondContext0);
      ATSParser.ViajarContext aTSParser_ViajarContext0 = mock(ATSParser.ViajarContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitViajar(aTSParser_ViajarContext0);
      aTSBaseListener0.enterEveryRule((ParserRuleContext) null);
      ATSParser.RegClienteContext aTSParser_RegClienteContext0 = mock(ATSParser.RegClienteContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitRegCliente(aTSParser_RegClienteContext0);
      ATSParser.FimContext aTSParser_FimContext0 = mock(ATSParser.FimContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitFim(aTSParser_FimContext0);
      ATSParser.LogContext aTSParser_LogContext1 = mock(ATSParser.LogContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitLog(aTSParser_LogContext1);
      ATSParser.RegCondContext aTSParser_RegCondContext1 = mock(ATSParser.RegCondContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterRegCond(aTSParser_RegCondContext1);
      ATSParser.FuncaoContext aTSParser_FuncaoContext0 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFuncao(aTSParser_FuncaoContext0);
      ATSParser.LogContext aTSParser_LogContext2 = mock(ATSParser.LogContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterLog(aTSParser_LogContext2);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ATSBaseListener aTSBaseListener0 = new ATSBaseListener();
      ATSParser.RegEmpresaContext aTSParser_RegEmpresaContext0 = mock(ATSParser.RegEmpresaContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitRegEmpresa(aTSParser_RegEmpresaContext0);
      ATSParser.LogoutContext aTSParser_LogoutContext0 = mock(ATSParser.LogoutContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitLogout(aTSParser_LogoutContext0);
      ATSParser.LoginContext aTSParser_LoginContext0 = mock(ATSParser.LoginContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitLogin(aTSParser_LoginContext0);
      ATSParser.FuncaoContext aTSParser_FuncaoContext0 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFuncao(aTSParser_FuncaoContext0);
      ATSParser.RegEmpresaContext aTSParser_RegEmpresaContext1 = mock(ATSParser.RegEmpresaContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitRegEmpresa(aTSParser_RegEmpresaContext1);
      ATSParser.AutenticadoContext aTSParser_AutenticadoContext0 = mock(ATSParser.AutenticadoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitAutenticado(aTSParser_AutenticadoContext0);
      aTSBaseListener0.enterLog((ATSParser.LogContext) null);
      aTSBaseListener0.enterLogout((ATSParser.LogoutContext) null);
      aTSBaseListener0.exitLog((ATSParser.LogContext) null);
      ATSParser.FuncaoContext aTSParser_FuncaoContext1 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFuncao(aTSParser_FuncaoContext1);
      ATSParser.RegClienteContext aTSParser_RegClienteContext0 = mock(ATSParser.RegClienteContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitRegCliente(aTSParser_RegClienteContext0);
      ATSParser.FimContext aTSParser_FimContext0 = mock(ATSParser.FimContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFim(aTSParser_FimContext0);
      aTSBaseListener0.enterEveryRule((ParserRuleContext) null);
      ErrorNode errorNode0 = mock(ErrorNode.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.visitErrorNode(errorNode0);
      aTSBaseListener0.exitLog((ATSParser.LogContext) null);
      ATSParser.AutenticadoContext aTSParser_AutenticadoContext1 = mock(ATSParser.AutenticadoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterAutenticado(aTSParser_AutenticadoContext1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ATSBaseListener aTSBaseListener0 = new ATSBaseListener();
      ATSParser.FimContext aTSParser_FimContext0 = mock(ATSParser.FimContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFim(aTSParser_FimContext0);
      ATSParser.RegEmpresaContext aTSParser_RegEmpresaContext0 = mock(ATSParser.RegEmpresaContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterRegEmpresa(aTSParser_RegEmpresaContext0);
      ATSParser.FuncaoContext aTSParser_FuncaoContext0 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitFuncao(aTSParser_FuncaoContext0);
      aTSBaseListener0.enterRegCliente((ATSParser.RegClienteContext) null);
      ATSParser.FuncaoContext aTSParser_FuncaoContext1 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFuncao(aTSParser_FuncaoContext1);
      ATSParser.AutenticadoContext aTSParser_AutenticadoContext0 = mock(ATSParser.AutenticadoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitAutenticado(aTSParser_AutenticadoContext0);
      ATSParser.AutenticadoContext aTSParser_AutenticadoContext1 = mock(ATSParser.AutenticadoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitAutenticado(aTSParser_AutenticadoContext1);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ATSBaseListener aTSBaseListener0 = new ATSBaseListener();
      ATSParser.FimContext aTSParser_FimContext0 = mock(ATSParser.FimContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.enterFim(aTSParser_FimContext0);
      ATSParser.LoginContext aTSParser_LoginContext0 = mock(ATSParser.LoginContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitLogin(aTSParser_LoginContext0);
      ATSParser.FuncaoContext aTSParser_FuncaoContext0 = mock(ATSParser.FuncaoContext.class, new ViolatedAssumptionAnswer());
      aTSBaseListener0.exitFuncao(aTSParser_FuncaoContext0);
  }
}
