/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 12 21:31:07 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Van_ESTest extends Van_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Van van0 = new Van("a4M8Bc", 0.0, point2D_Double0, "a4M8Bc");
      Van van1 = van0.clone();
      assertEquals(1.9, van0.getPrice(), 0.01);
      assertEquals(55.0, van0.getSpeed(), 0.01);
      assertEquals(9, van0.getSeats());
      assertEquals(55.0, van1.getSpeed(), 0.01);
      assertEquals(1.9, van1.getPrice(), 0.01);
      assertEquals(9, van1.getSeats());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Van van0 = new Van("N(i", (-1180.45917), point2D_Double0, "N(i");
      Van van1 = van0.clone();
      assertEquals(1.9, van0.getPrice(), 0.01);
      assertEquals(55.0, van1.getSpeed(), 0.01);
      assertEquals(55.0, van0.getSpeed(), 0.01);
      assertEquals(9, van0.getSeats());
      assertEquals(9, van1.getSeats());
      assertEquals(1.9, van1.getPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Trip trip0 = new Trip();
      Point2D.Double point2D_Double0 = trip0.getEnd();
      Van van0 = new Van("", 0.9, point2D_Double0, "");
      van0.addTrip(trip0);
      // Undeclared exception!
      try { 
        van0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Van van0 = null;
      try {
        van0 = new Van("I@Ja&P", 55.0, (Point2D.Double) null, "I@Ja&P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vehicle", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Van van0 = null;
      try {
        van0 = new Van((Van) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Van", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Trip trip0 = new Trip();
      Point2D.Double point2D_Double0 = trip0.getEnd();
      Van van0 = new Van("", 0.9, point2D_Double0, "");
      Van van1 = van0.clone();
      assertEquals(9, van1.getSeats());
      assertEquals(55.0, van1.getSpeed(), 0.01);
      assertEquals(1.9, van0.getPrice(), 0.01);
      assertEquals(55.0, van0.getSpeed(), 0.01);
      assertEquals(1.9, van1.getPrice(), 0.01);
      assertEquals(9, van0.getSeats());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Trip trip0 = new Trip();
      Point2D.Double point2D_Double0 = trip0.getEnd();
      Van van0 = new Van("", 0.9, point2D_Double0, "");
      Van van1 = new Van(van0);
      assertEquals(1.9, van0.getPrice(), 0.01);
      assertEquals(55.0, van1.getSpeed(), 0.01);
      assertEquals(9, van0.getSeats());
      assertEquals(55.0, van0.getSpeed(), 0.01);
      assertEquals(9, van1.getSeats());
      assertEquals(1.9, van1.getPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Van van0 = null;
      try {
        van0 = new Van();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
